{"ast":null,"code":"var _jsxFileName = \"/Users/mrx/Desktop/react/my-app/src/components/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"./chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoint = [{\n    lable: \"Jan\",\n    value: 0\n  }, {\n    lable: \"Feb\",\n    value: 0\n  }, {\n    lable: \"Mar\",\n    value: 0\n  }, {\n    lable: \"Apr\",\n    value: 0\n  }, {\n    lable: \"May\",\n    value: 0\n  }, {\n    lable: \"Jun\",\n    value: 0\n  }, {\n    lable: \"Jul\",\n    value: 0\n  }, {\n    lable: \"Aug\",\n    value: 0\n  }, {\n    lable: \"Seb\",\n    value: 0\n  }, {\n    lable: \"Oct\",\n    value: 0\n  }, {\n    lable: \"Nov\",\n    value: 0\n  }, {\n    lable: \"Dec\",\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoint[expenseMonth].value += expense.amount;\n    console.log(expense);\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoint: chartDataPoint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoint","lable","value","expense","expenses","expenseMonth","date","getMonth","amount","console","log"],"sources":["/Users/mrx/Desktop/react/my-app/src/components/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\nimport Chart from \"./chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoint = [\n    { lable: \"Jan\", value: 0 },\n    { lable: \"Feb\", value: 0 },\n    { lable: \"Mar\", value: 0 },\n    { lable: \"Apr\", value: 0 },\n    { lable: \"May\", value: 0 },\n    { lable: \"Jun\", value: 0 },\n    { lable: \"Jul\", value: 0 },\n    { lable: \"Aug\", value: 0 },\n    { lable: \"Seb\", value: 0 },\n    { lable: \"Oct\", value: 0 },\n    { lable: \"Nov\", value: 0 },\n    { lable: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoint[expenseMonth].value += expense.amount;\n    console.log(expense);\n  }\n  return <Chart dataPoint={chartDataPoint} />;\n};\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AAAC;AAElC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,cAAc,GAAG,CACrB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;EACD,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE;IAC5CP,cAAc,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;IACpDC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EACtB;EACA,oBAAO,QAAC,KAAK;IAAC,SAAS,EAAEH;EAAe;IAAA;IAAA;IAAA;EAAA,QAAG;AAC7C,CAAC;AAAC,KArBIF,aAAa;AAsBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}